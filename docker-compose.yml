version: '3.9'

services:
  ssh-key-manager:
    build: ./app
    container_name: ssh-key-manager
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    environment:
      - DOMAIN=${DOMAIN}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --proxy-headers
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/tpl:/etc/nginx/tpl
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/startup.sh:/etc/nginx/startup.sh
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint: ["/bin/bash", "-c", "/etc/nginx/startup.sh"]
    depends_on:
      - ssh-key-manager
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
      - ./certbot/startup.sh:/startup.sh  # <-- IMPORTANT new mount!
    entrypoint: ["/bin/sh", "/startup.sh"]
    environment:
      - DOMAIN=${DOMAIN}
      - ADMIN_MAIL=${ADMIN_MAIL}
    depends_on:
      - nginx
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  celery-worker:
    build: ./worker
    container_name: celery-worker
    volumes:
      - ./data:/app/data
    command: celery -A main.celery_app worker --loglevel=info
    depends_on:
      - ssh-key-manager
      - rabbitmq
    restart: unless-stopped

volumes:
  sshkeys_data:
    driver: local